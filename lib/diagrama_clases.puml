@startuml

skinparam classAttributeIconSize 0

' Clases de la aplicación
class DatabaseHelper {
    -Database? _database
    +Future<Database> get database()
    +Future<void> initDB()
    +Future<int> insertRecipe(Map<String, dynamic> recipe)
    +Future<void> updateRecipe(Map<String, dynamic> recipe)
    +Future<void> deleteRecipe(int id)
    +Future<List<Map<String, dynamic>>> getRecipes()
    +Future<int> getRecipeCount()
}

class RecipeNotifier {
    +List<Map<String, dynamic>> recipes
    +void loadRecipes()
    +void addRecipe(Map<String, dynamic> recipe)
    +void updateRecipe(Map<String, dynamic> recipe)
    +void deleteRecipe(int id)
    +void toggleFavorite(int index)
    +int getRecipeCount()
    +Future<void> loadPredefinedRecipes()
}

class EditRecipeScreen {
    -TextEditingController nameController
    -TextEditingController ingredientsController
    -TextEditingController methodController
    -String? extractionMethod
    -String? imagePath
    +void _pickImageFromGallery()
    +void _pickImageFromCamera()
    +void _saveRecipe()
}

class UploadRecipeScreen {
    -TextEditingController nameController
    -TextEditingController ingredientsController
    -TextEditingController methodController
    -String? extractionMethod
    -String? imagePath
    +void _submitRecipe()
}

class RecipeDetailsScreen {
    -Map<String, dynamic> recipe
    +void _shareRecipe(Map<String, dynamic> recipe)
    +Future<void> _showDeleteConfirmationDialog()
}

class BaristaRecipesScreen {
    -List<Map<String, dynamic>> baristaRecipes
    +Future<void> _loadBaristaRecipes()
    +void _saveEditedRecipe(Map<String, dynamic> recipe)
}

class RecipeListScreen {
    +void refreshRecipes()
    +void addNewRecipe()
}

class FeedbackScreen {
    -TextEditingController nameController
    -TextEditingController groupController
    -TextEditingController relationController
    -List<dynamic> questions
    +Future<void> sendFeedbackEmail()
}

class FavoriteRecipesScreen {
    +void loadFavoriteRecipes()
    +void refreshFavorites()
}

class Main {
    +void main()
    +Widget build(BuildContext context)
    +void runApp()
}

' Definir relaciones entre clases
RecipeNotifier <.. EditRecipeScreen
RecipeNotifier <.. UploadRecipeScreen
RecipeNotifier <.. RecipeDetailsScreen
RecipeNotifier <.. BaristaRecipesScreen
RecipeNotifier <.. FeedbackScreen
RecipeNotifier <.. FavoriteRecipesScreen
RecipeNotifier <.. RecipeListScreen

DatabaseHelper --> RecipeNotifier
EditRecipeScreen --> DatabaseHelper
UploadRecipeScreen --> DatabaseHelper
BaristaRecipesScreen --> EditRecipeScreen
RecipeListScreen --> RecipeDetailsScreen
FavoriteRecipesScreen --> RecipeDetailsScreen
FeedbackScreen --> DatabaseHelper

' Relación entre pantallas
EditRecipeScreen --> UploadRecipeScreen
BaristaRecipesScreen --> EditRecipeScreen
RecipeDetailsScreen --> EditRecipeScreen
RecipeListScreen --> FavoriteRecipesScreen
RecipeDetailsScreen --> RecipeListScreen

' Relación con Main
Main --> RecipeListScreen
Main --> FavoriteRecipesScreen
Main --> BaristaRecipesScreen
Main --> FeedbackScreen

@enduml
